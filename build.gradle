buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'



group = 'privat'
version = '0.2'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {

    compile fileTree(dir: 'jars', include: ['*.jar'])
    compile fileTree(dir: 'jcef/jar', include: ['*.jar'])

    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.13'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.8'




    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

mainClassName = 'webBlackJack.Main'

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'BlackJack',
                'Implementation-Version': version,
                'Main-Class': 'spielLogik.Startklasse'
    }
    baseName = project.name + '-console'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


bootJar {
    baseName = project.name + "-web"
}